@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Transaction</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayName("Title")
        </dt>

        <dd id="title"></dd>
        <dt>
            Value
        </dt>

        <dd id="value"></dd>
        <dt>
            Date
        </dt>

        <dd id="date"></dd>

        <dt>
            @Html.DisplayName("Category")
        </dt>

        <dd id="fk_categoryname"></dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = @ViewBag.id }) |
    @Html.ActionLink("Delete", "Delete", new { id = @ViewBag.id }) |
    @*@Html.ActionLink("Send mail with info", "", new { id = @ViewBag.id, mail = "" })*@
    <a href="" id="sendMail">Send mail with info</a> |
    @Html.ActionLink("Back to List", "Index")
</p>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.0.3/sweetalert2.all.min.js"></script>
    <script>
        let transaction;
        let socket = io('https://herosocketrabbit.herokuapp.com/');
        let emailTemplate = 'Transaction Title: [[Text]] Value: [[Value]] Date: [[Date]] CategoryName: [[FK_Category]]';

        socket.emit('GetSingleTransaction', {Id: @ViewBag.id});

        $('#sendMail').on('click', function(event) {
            event.preventDefault()
        
            swal({
                title: 'Enter email',
                input: 'email',
                showCancelButton: true,
                confirmButtonText: 'Submit',
                showLoaderOnConfirm: true,
                preConfirm: function (email) {
                    return new Promise(function (resolve) {
                        console.log(JSON.stringify(transaction));
                        socket.emit('SendMail', {template: emailTemplate, data: transaction, email: email});
                    });
                }
            });

            socket.on('SendMail', function(res) {
                if (res.status === 200)
                    swal('Success!', res.Result, 'success');
                else
                    swal.showValidationError('An error occured and the email has not been sent');

            });


            return false;
        });

        socket.on('GetSingleTransaction', function (res) {             
            transaction = JSON.parse(res.Result)[0];
          
            if (res.Status === 200)
            {
                $('#title').text(transaction.Text);
                $('#value').text(transaction.Value + " DKK");
                $('#date').text(transaction.Date.substring(0, 10));
                $('#fk_categoryname').text(transaction.FK_Category);
            }
        });
      
    </script>
}
